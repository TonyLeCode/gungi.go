// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0

package db

import (
	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type AuthUser struct {
	InstanceID               pgtype.UUID        `json:"instance_id"`
	ID                       uuid.UUID          `json:"id"`
	Aud                      pgtype.Text        `json:"aud"`
	Role                     pgtype.Text        `json:"role"`
	Email                    pgtype.Text        `json:"email"`
	EncryptedPassword        pgtype.Text        `json:"encrypted_password"`
	EmailConfirmedAt         pgtype.Timestamptz `json:"email_confirmed_at"`
	InvitedAt                pgtype.Timestamptz `json:"invited_at"`
	ConfirmationToken        pgtype.Text        `json:"confirmation_token"`
	ConfirmationSentAt       pgtype.Timestamptz `json:"confirmation_sent_at"`
	RecoveryToken            pgtype.Text        `json:"recovery_token"`
	RecoverySentAt           pgtype.Timestamptz `json:"recovery_sent_at"`
	EmailChangeTokenNew      pgtype.Text        `json:"email_change_token_new"`
	EmailChange              pgtype.Text        `json:"email_change"`
	EmailChangeSentAt        pgtype.Timestamptz `json:"email_change_sent_at"`
	LastSignInAt             pgtype.Timestamptz `json:"last_sign_in_at"`
	RawAppMetaData           []byte             `json:"raw_app_meta_data"`
	RawUserMetaData          []byte             `json:"raw_user_meta_data"`
	IsSuperAdmin             pgtype.Bool        `json:"is_super_admin"`
	CreatedAt                pgtype.Timestamptz `json:"created_at"`
	UpdatedAt                pgtype.Timestamptz `json:"updated_at"`
	Phone                    pgtype.Text        `json:"phone"`
	PhoneConfirmedAt         pgtype.Timestamptz `json:"phone_confirmed_at"`
	PhoneChange              pgtype.Text        `json:"phone_change"`
	PhoneChangeToken         pgtype.Text        `json:"phone_change_token"`
	PhoneChangeSentAt        pgtype.Timestamptz `json:"phone_change_sent_at"`
	ConfirmedAt              pgtype.Timestamptz `json:"confirmed_at"`
	EmailChangeTokenCurrent  pgtype.Text        `json:"email_change_token_current"`
	EmailChangeConfirmStatus pgtype.Int2        `json:"email_change_confirm_status"`
	BannedUntil              pgtype.Timestamptz `json:"banned_until"`
	ReauthenticationToken    pgtype.Text        `json:"reauthentication_token"`
	ReauthenticationSentAt   pgtype.Timestamptz `json:"reauthentication_sent_at"`
	IsSsoUser                bool               `json:"is_sso_user"`
	DeletedAt                pgtype.Timestamptz `json:"deleted_at"`
}

type Game struct {
	ID           int64              `json:"id"`
	PublicID     string             `json:"public_id"`
	Fen          pgtype.Text        `json:"fen"`
	History      string             `json:"history"`
	Completed    bool               `json:"completed"`
	DateStarted  pgtype.Timestamptz `json:"date_started"`
	DateFinished pgtype.Timestamptz `json:"date_finished"`
	CurrentState string             `json:"current_state"`
	Ruleset      string             `json:"ruleset"`
	Type         string             `json:"type"`
	User1        uuid.UUID          `json:"user_1"`
	User2        uuid.UUID          `json:"user_2"`
	Result       pgtype.Text        `json:"result"`
}

type Profile struct {
	ID       uuid.UUID `json:"id"`
	Username string    `json:"username"`
}

type RoomList struct {
	ID          uuid.UUID          `json:"id"`
	HostID      uuid.UUID          `json:"host_id"`
	Description string             `json:"description"`
	Rules       string             `json:"rules"`
	Type        string             `json:"type"`
	Color       string             `json:"color"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
}

type UndoRequest struct {
	ID           int64     `json:"id"`
	GamePublicID string    `json:"game_public_id"`
	SenderID     uuid.UUID `json:"sender_id"`
	ReceiverID   uuid.UUID `json:"receiver_id"`
	Status       string    `json:"status"`
}
